%h1 railties

%p
  Mongoid provides some railties and initializers that one should be
  aware of when writing a Rails application with Mongoid.

%h3 configuration

%p
  You can set Mongoid configuration options in your <tt>application.rb</tt>
  along with other Rails environment specific options by accessing
  <tt>config.mongoid</tt>. Options set here will override those set in
  your <tt>config/mongoid.yml</tt>.

:coderay
  #!ruby
  module MyApplication
    class Application < Rails::Application
      config.mongoid.logger = Logger.new($stdout, :warn)
      config.mongoid.persist_in_safe_mode = true
    end
  end

%h3 model preloading

%p
  In order to properly set up single collection inheritance, Mongoid
  needs to preload all models before every request in development mode.
  This can get slow, so if you are not using any inheritance it is
  recommended you turn this feature off.

:coderay
  #!ruby
  config.mongoid.preload_models = false

%h3 exceptions

%p
  Similar to Active Record, Mongoid tells raise to return specific http
  codes when some errors are raised.

  %ul
    %li <tt>Mongoid::Errors::DocumentNotFound</tt>: 404
    %li <tt>Mongoid::Errors::Validations</tt>: 422

%h3 unicorn and passenger

%p
  When using Unicorn or Passenger, each time a child process is forked
  when using app preloading or smart spawning, Mongoid will automatically
  reconnect to the master database. If you are doing this in your
  application manually you may remove your code.
