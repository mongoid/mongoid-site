- content_for :head do
  %title Mongoid: Relations [Metadata]

%h1 metadata

%p
  All relations in Mongoid contain metadata that holds information
  about the relation in question, and is a valuable tool for third
  party developers to use to extend Mongoid.

%p
  You can access the metadata of the relation in a few different ways.

:coderay
  #!ruby

  # Get the metadata for a named relation from the class or document.
  Model.reflect_on_association(:relation_name)
  model.reflect_on_association(:relation_name)

  # Get the metadata that the current object has in its relation.
  model.metadata

  # Get the metadata with a specific relation itself on a specific
  # document.
  person.addresses.metadata

%h3 the metadata object

%p
  The metadata object itself contains more information than one might
  know what to do with.

  %ul
    %li <tt>Metadata#class_name</tt>
    %li <tt>Metadata#embedded?</tt>
    %li <tt>Metadata#extension</tt>
    %li <tt>Metadata#foreign_key</tt>
    %li <tt>Metadata#foreign_key_default</tt>
    %li <tt>Metadata#foreign_key_setter</tt>
    %li <tt>Metadata#indexed?</tt>
    %li <tt>Metadata#inverse</tt>
    %li <tt>Metadata#inverse_foreign_key</tt>
    %li <tt>Metadata#inverse_klass</tt>
    %li <tt>Metadata#inverse_setter</tt>
    %li <tt>Metadata#inverse_type</tt>
    %li <tt>Metadata#inverse_type_setter</tt>
    %li <tt>Metadata#key</tt>
    %li <tt>Metadata#klass</tt>
    %li <tt>Metadata#macro</tt>
    %li <tt>Metadata#polymorphic?</tt>
    %li <tt>Metadata#setter</tt>
    %li <tt>Metadata#stores_foreign_key?</tt>
    %li <tt>Metadata#validate?</tt>
