- content_for :head do
	%title Mongoid: Mongoid

%h1 Mongoid

%p
	This is the Mongoid documentation website.    

%p
	Mongoid (pronounced mann-goyd) is an Object-Document-Mapper (ODM) for
	%a{:href=>"http://mongodb.org"} MongoDB
	written in Ruby. It was conceived in August,
	2009 during a whiskey-induced evening at the infamous Oasis in Florida,
	USA by 
	%a{:href=>"http://github.com/durran"} 
		Durran Jordan
		%img{:style=>"position:relative; top:3px", :height=>"22", :width=>"22", :src=>"/github.png"}
	
	
%p
	The philosophy of Mongoid is to provide a familiar API to Ruby developers
	who have been using Active Record or Data Mapper, while leveraging the
	power of MongoDB's schemaless and performant document-based design, dynamic
	queries, and atomic modifier operations.
	

%p 
	It is developed by the Mongoid core team under the leadership of 
	%a{:href=>"http://twitter.com/modetojoy"} 
		Durran Jordan
		%img{:style=>"position:relative; top:3px", :height=>"17", :width=>"17", :src=>"http://twitter-badges.s3.amazonaws.com/t_small-a.png"}  
        
%p
	You can find great support by joining 
	%a{:href=>'http://groups.google.com/group/mongoid/'} Mongoid's Google Group   
	
:coderay
	#!ruby

	class Artist
		include Mongoid::Document
		field :name, type: String
		embeds_many :instruments
	end

	class Instrument
		include Mongoid::Document
		field :name, type: String
		embedded_in :artist
	end

	# Find the first artist named "Syd Vicious" and create an embedded bass
	# document for him. Of course he'll smash it within the next few minutes,
	# but no worries we can delete it later.
	Artist.where(name: "Syd Vicious").first.tap do |artist|
		artist.instruments.create(type: "Bass")
	end