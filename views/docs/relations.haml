%h1 relations

%p
  Relations are associations between one model and another in the domain
  and in the database. Embedded relations describe documents who are
  stored inside other documents in the database. Referenced relations
  describe documents that reference documents in another collection by
  storing data (usually an id) about the other document in itself.

%p
  All relation objects in Mongoid are proxies to the actual document or
  documents themselves, which provide extra functionality for accessing,
  replacing, appending and persisting.

%h2 commonalities between all relations

%h3 attributes

%p
  All relations contain a <tt>target</tt>, which is the proxied document
  or documents, a <tt>base</tt> which is the document the relation hangs
  off, and <tt>metadata</tt> which provides information about the relation.

:coderay
  #!ruby

  class Person
    include Mongoid::Document
    embeds_many :addresses
  end

  person.addresses = [ address ]
  person.addresses.target #=> returns [ address ]
  person.addresses.base #=> returns person
  person.addresses.metadata #=> returns the metadata

%h3 extensions

%p
  All relations can have extensions, which provides a way to add
  application specific functionality to the relation. They are defined by
  providing a block to the relation definition.

:coderay
  #!ruby

  class Person
    include Mongoid::Document
    embeds_many :addresses do
      def find_by_country(country)
        where(country: country).first
      end
    end
  end

%h2 overview
  
= link_to image_tag( '/images/relations/smaller/sheet.png'), '/images/relations/Sheet.png'
